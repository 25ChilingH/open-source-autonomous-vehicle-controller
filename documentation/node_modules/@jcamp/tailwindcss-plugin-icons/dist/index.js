"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPluginIcons = exports.defaultConfig = void 0;
const plugin = require("tailwindcss/plugin");
const child_process_1 = require("child_process");
const path_1 = require("path");
exports.defaultConfig = {
    scale: 1,
    mode: 'auto',
    prefix: 'i-',
    warn: false,
    collections: null,
    extraProperties: {},
    customizations: {},
    autoInstall: false,
    unit: 'em',
};
function createPluginIcons(options = {}) {
    function getCSS(value, mode) {
        let options64 = Buffer.from(JSON.stringify(options)).toString('base64');
        const { stderr, stdout } = (0, child_process_1.spawnSync)('node', [
            (0, path_1.resolve)(__dirname, './worker'),
            value,
            mode,
            options64,
        ]);
        const svg = String(stdout);
        const err = String(stderr);
        if (err) {
            if (options.warn ?? false)
                console.error(`[tw-icons]: ${err}`);
            return {};
        }
        return JSON.parse(svg);
    }
    return function ({ matchComponents }) {
        const _prefix = (options.prefix || 'i-').replace(/-$/, '');
        matchComponents({
            [_prefix]: (value) => getCSS(value, 'def'),
            [_prefix + '-bg']: (value) => getCSS(value, 'bg'),
            [_prefix + '-auto']: (value) => getCSS(value, 'auto'),
            [_prefix + '-mask']: (value) => getCSS(value, 'mask'),
        });
    };
}
exports.createPluginIcons = createPluginIcons;
const pluginIcons = plugin.withOptions(function (options) {
    return createPluginIcons(options);
});
module.exports = pluginIcons;
