import { RuleConfigSeverity } from '@commitlint/types';

const Configuration = {
  parserPreset: "conventional-changelog-conventionalcommits",
  rules: {
    "body-leading-blank": [RuleConfigSeverity.Warning, "always"],
    "body-max-line-length": [RuleConfigSeverity.Error, "always", 100],
    "footer-leading-blank": [RuleConfigSeverity.Warning, "always"],
    "footer-max-line-length": [RuleConfigSeverity.Error, "always", 100],
    "header-max-length": [RuleConfigSeverity.Error, "always", 100],
    "subject-case": [
      RuleConfigSeverity.Error,
      "never",
      ["sentence-case", "start-case", "pascal-case", "upper-case"]
    ],
    "subject-empty": [RuleConfigSeverity.Error, "never"],
    "subject-full-stop": [RuleConfigSeverity.Error, "never", "."],
    "type-case": [RuleConfigSeverity.Error, "always", "lower-case"],
    "type-empty": [RuleConfigSeverity.Error, "never"],
    "type-enum": [
      RuleConfigSeverity.Error,
      "always",
      [
        "build",
        "chore",
        "ci",
        "docs",
        "examples",
        "feat",
        "fix",
        "perf",
        "refactor",
        "revert",
        "style",
        "test",
        "types",
        "wip"
      ]
    ]
  },
  prompt: {
    questions: {
      type: {
        description: "Select the type of change that you're committing",
        enum: {
          feat: {
            description: "A new feature or enhancement",
            title: "Enhancements",
            emoji: "\u{1F680}"
          },
          fix: {
            description: "A bug fix",
            title: "Fixes",
            emoji: "\u{1FA79}"
          },
          docs: {
            description: "Documentation only changes",
            title: "Documentation",
            emoji: "\u{1F4D6}"
          },
          style: {
            description: "Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)",
            title: "Styles",
            emoji: "\u{1F3A8}"
          },
          refactor: {
            description: "A code change that neither fixes a bug nor adds a feature",
            title: "Code Refactoring",
            emoji: "\u{1F485}"
          },
          perf: {
            description: "A code change that improves performance",
            title: "Performance Improvements",
            emoji: "\u{1F525}"
          },
          test: {
            description: "Adding missing tests or correcting existing tests",
            title: "Tests",
            emoji: "\u2705"
          },
          build: {
            description: "Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)",
            title: "Builds",
            emoji: "\u{1F4E6}"
          },
          ci: {
            description: "Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)",
            title: "Continuous Integrations",
            emoji: "\u{1F916}"
          },
          chore: {
            description: "Other changes that don't modify src or test files",
            title: "Chores",
            emoji: "\u{1F3E1}"
          },
          revert: {
            description: "Reverts a previous commit",
            title: "Reverts",
            emoji: "\u{1F5D1}"
          },
          types: {
            description: "Changes to typescript types",
            title: "Types",
            emoji: "\u{1F30A}"
          },
          examples: {
            description: "Work on examples or demos",
            title: "Examples",
            emoji: "\u{1F3C0}"
          },
          wip: {
            description: "WIP commits that should not be in the changelog",
            title: "WIP Commits",
            emoji: "\u26D4\uFE0F"
          }
        }
      },
      scope: {
        description: "What is the scope of this change (e.g. component or file name)"
      },
      subject: {
        description: "Write a short, imperative tense description of the change"
      },
      body: {
        description: "Provide a longer description of the change"
      },
      isBreaking: {
        description: "Are there any breaking changes?"
      },
      breakingBody: {
        description: "A BREAKING CHANGE commit requires a body. Please enter a longer description of the commit itself"
      },
      breaking: {
        description: "Describe the breaking changes"
      },
      isIssueAffected: {
        description: "Does this change affect any open issues?"
      },
      issuesBody: {
        description: "If issues are closed, the commit requires a body. Please enter a longer description of the commit itself"
      },
      issues: {
        description: 'Add issue references (e.g. "fix #123", "re #123".)'
      }
    }
  }
};
module.exports = Configuration;

export { Configuration };
